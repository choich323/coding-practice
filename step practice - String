#include <iostream>
#include <string>
using namespace std;

void Quiz_1();
void Quiz_2();
void Quiz_3();
void Quiz_4();
void Quiz_5();
void Quiz_6();
void Quiz_7();
void Quiz_8();
void Quiz_9();
void Quiz_10();
void Quiz_11();

int main() {

    //Quiz_1();
    //Quiz_2();
    //Quiz_3();
    Quiz_4();
    //Quiz_5();
    //Quiz_6();
    //Quiz_7();
    //Quiz_8();
    //Quiz_9();
    //Quiz_10();
    //Quiz_11();

    return 0;
}

// #1
void Quiz_1() {
    char ch;
    cin >> ch;
    cout << (int)ch;
}

// #2
void Quiz_2() {
    int N;
    cin >> N;
    int sum = 0;

    char num;

    for(int i = 0; i < N; i++){
        cin >> num;
        sum = sum + (int)num - 48;
    }
    cout << sum;
}
// #3
void Quiz_3() {
    char arr[101] = { 0 };
    cin >> arr;
    for (int i = 97; i <= 122; i++)
    {
        int j = 0;
        while (arr[j] != 0)
        {
            if (arr[j] == (char)i)
                break;
            j++;
        }
        if (arr[j] == (char)i)
            cout << j << " ";
        else
            cout << "-1 ";
    }
}
// #4
void Quiz_4() {
    int T, R;
    cin >> T;
    string S;

    for (int i = 0; i < T; i++) {
        cin >> R >> S;
        for (int j = 0; j < S.length(); j++) {
            for (int k = 0; k < R; k++) {
                cout << S[j];
            }
        }
        cout << endl;
    }
}
// #5
void Quiz_5() {

    char* S = new char[1000000];

    for (int i = 0; i < 1000000; i++) {
        S[i] = 0;
    }

    char Alpha[26] = { 0 };
    char alpha[26] = { 0 };

    int idx = 0;
    for (int i = 97; i <= 122; i++) {
        alpha[idx] = i;
        idx++;
    }
    idx = 0;
    for (int i = 65; i <= 90; i++) {
        Alpha[idx] = i;
        idx++;
    }
   
    cin >> S;

    int count[26] = { 0 };
 
    for (int j = 0; S[j] != 0; j++) {
        for (int k = 0; k < 26; k++) {  // 대문자 검색
            if (S[j] == Alpha[k]) {
                count[k]++;
                break;
            }
        }
        for (int k = 0; k < 26; k++) {  // 소문자 검색
            if (S[j] == alpha[k]) {
                count[k]++;
                break;
            }
        }
    }

    int max = 0;
    int max_idx = 0;

    for (int p = 0; p < 26; p++) {
        if (max < count[p]) {
            max = count[p];
            max_idx = p;
        }
    }

    bool x2 = false;
    for (int p = 0; p < 26; p++) {
        if (p != max_idx) {
            if (count[p] == max)
                x2 = true;
        }
    }

    if (x2)
        cout << "?";
    else
        cout << Alpha[max_idx];

    delete[] S;
}
